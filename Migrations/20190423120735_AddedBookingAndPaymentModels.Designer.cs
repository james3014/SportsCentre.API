// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsCentre.API.Data;

namespace SportsCentre.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190423120735_AddedBookingAndPaymentModels")]
    partial class AddedBookingAndPaymentModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("SportsCentre.API.Models.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BookingDate");

                    b.Property<string>("BookingName");

                    b.Property<int?>("CreatedById");

                    b.Property<bool>("HasBeenPaid");

                    b.Property<int?>("PaymentDetailId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PaymentDetailId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("SportsCentre.API.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Amount");

                    b.Property<int?>("PaidById");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.HasIndex("PaidById");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("SportsCentre.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine1");

                    b.Property<string>("AddressLine2");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<DateTime>("MembershipExpiry");

                    b.Property<string>("MembershipType");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("PostCode");

                    b.Property<string>("Surname");

                    b.Property<string>("Town");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SportsCentre.API.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("SportsCentre.API.Models.Booking", b =>
                {
                    b.HasOne("SportsCentre.API.Models.User", "CreatedBy")
                        .WithMany("Bookings")
                        .HasForeignKey("CreatedById");

                    b.HasOne("SportsCentre.API.Models.Payment", "PaymentDetail")
                        .WithMany()
                        .HasForeignKey("PaymentDetailId");
                });

            modelBuilder.Entity("SportsCentre.API.Models.Payment", b =>
                {
                    b.HasOne("SportsCentre.API.Models.User", "PaidBy")
                        .WithMany("Payments")
                        .HasForeignKey("PaidById");
                });
#pragma warning restore 612, 618
        }
    }
}
